
1) add to urls: 

    path("api/add_comment/<int:listing_id>", views.api_add_comment, name="api-add-comment"),

---------------------------------------------------------------------------

2) add to views.py:

from django.http import JsonResponse
def api_add_comment(request, listing_id):
    listing = Listing.objects.get(id=listing_id)
    comment=request.POST["comment_text"]
    if request.method == "POST":
        c = Comment.objects.create(commenter=request.user, 
                                comment=comment, 
                                listing=listing)
        return JsonResponse({'comment': c})
    return JsonResponse({'error':'something went wrong'})


---------------------------------------------------------------------------

3) Modify form in comment_template.html:

a) In form def, change action and give it ID; change url:

<form id="comment-form" action="{% url 'api-add-comment' listing_id=listing.pk %}" style="display: inline" method="POST">

b) button => input
        <input type="submit" style="display: inline">Post a comment!</input>


---------------------------------------------------------------------------

4) Add <script>c) basic javascript:

    <script>
    document.addEventListener('DOMContentLoaded', ()=> {
    
        document.querySelector('#comment-form').onsubmit = ()=> {
            form = document.querySelector('#comment-form');
            const formData = new FormData(form);
            fetch(form.action, {
                method: "POST",
                body: formData
            })
            .then(response => {
                return response.json()})
            .then(data => {
                console.log(data)
                //addComment(data);
            })
            .catch(error => {
                console.log("*** api/comment error **", error);
            })
    
            //document.querySelector('#comment_text').value = ''
            return false;
        }
    })

    </script>

4b) Need to fix the view, because Json cannot serialize Django objects:

        return JsonResponse({
                'comment': c.comment,
                'commenter': f'{c.commenter}',
                'created_at': c.created_at
            })

4c) Implement addComment

listing.html: give name to <section id="comments-section">

function addComment(data) {
    const p = document.createElement('p');
    p.style.display = "inline";
    p.innerHTML = `@${data["created_at"]} ${data["commenter"]} says: ${ data["comment"]}`
    document.querySelector('#comments-section').append(p);

    const br = document.createElement('br');
    document.querySelector('#comments-section').append(br);
}

---------------------------------------------------------------------------

5) Finsihing touches

5a) Clear out the textfield after submit:
            document.querySelector('#comment_text').value = ''

5b) As was done in tasks, disable ADD COMMENT button when the textfield is empty
